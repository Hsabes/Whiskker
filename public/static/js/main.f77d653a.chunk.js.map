{"version":3,"sources":["components/NavBar.js","components/PostForNewsFeed.js","components/NewsFeed.js","components/Login.js","components/SignupNavBar.js","components/CatpanionsSearch.js","components/CatpanionItem.js","components/CatpanionSearchItem.js","components/CatpanionsList.js","components/Catpanions.js","components/PostForProfile.js","components/CreatePost.js","components/Profile.js","components/Signup.js","components/MeowMail.js","components/MyAccount.js","components/App.js","index.js"],"names":["Navbar","setCurrentUser","currentUser","useState","open","setOpen","navigate","useNavigate","StyledToolbar","styled","Toolbar","display","justifyContent","Icons","Box","theme","alignItems","gap","AppBar","position","sx","backgroundColor","Typography","variant","xs","sm","Pets","Badge","color","component","RouterLink","to","Home","Message","Avatar","src","purrfile_picture","onClick","e","Menu","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","fetch","method","localStorage","clear","PostForNewsFeed","post","like","likeCount","setLikeCount","likeToggle","setLikeToggle","Card","width","margin","CardHeader","avatar","alt","user","height","title","username","CardMedia","image","description","CardContent","CardActions","disableSpacing","Button","console","log","currentLikeToggle","configObj","headers","Accept","body","JSON","stringify","then","resp","json","obj","name","value","Checkbox","inputProps","icon","checkedIcon","Favorite","NewsFeed","allPosts","setAllPosts","setErrors","useEffect","res","ok","posts","Object","entries","errors","bgcolor","flex","p","Stack","friends","length","idsArray","arr","key","friendIds","map","i","postsArray","eachPostsArray","filter","push","flat","friendsPosts","sort","a","b","container","style","Link","defaultValues","password","Login","formValues","setFormValues","showPassword","setShowPassword","handleChange","target","Grid","backgroundImage","backgroundSize","backgroundAttachment","backgroundRepeat","marginTop","onSubmit","preventDefault","Error","catch","error","alert","direction","item","marginBottom","TextField","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","label","type","onChange","required","IconButton","currentState","edge","SignupNavbar","ml","CatpanionsSearch","search","setSearch","marginLeft","className","placeholder","size","fill","CatpanionItem","Item","friend","catpanions","disabled","setDisabled","flexGrow","full_name","borderRadius","mr","catpanionToDelete","find","catpanion","user_id","friend_id","CatpanionSearchItem","searchDisabled","setSearchDisabled","friendDisabled","setFriendDisabled","friendIdsArray","includes","CatpanionsList","users","setCatpanions","Paper","typography","body2","padding","spacing","textAlign","palette","text","secondary","allUsersArray","matchingUsers","toLowerCase","allUsers","Catpanions","setUsers","top","left","transform","border","boxShadow","PostForProfile","deletePost","updatePost","handleClose","editPostValues","setEditPostValues","editOpen","setEditOpen","created_at","handleEditSubmit","updatedPost","maxWidth","Modal","multiline","rows","mt","mb","CustomModal","UserBox","undefined","CreatePost","addPost","postValues","setPostValues","handleSubmit","newPost","Tooltip","bottom","md","Fab","Add","fontWeight","Profile","setPosts","meow_posts","bio","current","Container","maxwidth","align","gutterBottom","paragraph","Signup","formData","setFormData","MeowMail","commentTxt","setCommentTxt","handleMessageClick","sent_messages","received_messages","borderRight","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","overflowY","fullWidth","MyAccount","updateUser","setUpdateUser","data","justify","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f77d653a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate,  Link as RouterLink } from 'react-router-dom'\nimport { Pets, Home, Message } from \"@mui/icons-material\";\nimport { AppBar, Toolbar, styled, Typography, Box, Badge, Avatar, Menu, MenuItem } from \"@mui/material\"\n\nexport default function Navbar ({setCurrentUser, currentUser}) {\n\n// Material UI\nconst [open, setOpen] = useState(false)\n\nconst navigate = useNavigate();\n\n// logout button\nconst handleLogOut = () => {\n  // DELETE `/logout`\n  fetch('/logout', {\n    method: 'DELETE'\n  })\n  setCurrentUser(false)\n  localStorage.clear();\n  navigate(\"/\")\n};\n  \n\n// Materail UI \n  const StyledToolbar = styled(Toolbar) ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  })\n\n  const Icons = styled(Box)(({ theme }) => ({\n    display:\"flex\" , alignItems:\"center\" , gap:\"40px\"\n  }))\n\n\n  return (\n    <div>\n    <AppBar position=\"sticky\" sx={{backgroundColor:\"#33691e\"}}>\n        <StyledToolbar>\n          <Typography variant=\"h6\" sx={{ display: {xs: \"none\", sm:\"block\" } }}>\n            Whiskker\n            </Typography>\n              <Pets sx={{ display: { xs: \"block\", sm: \"none\" } }} />\n          <Icons>\n            <Badge color=\"primary\" component={RouterLink} to=\"/newsfeed\">\n                <Home/>\n            </Badge>\n            <Badge color=\"primary\" component={RouterLink} to=\"/mycatpanions\">\n                <Pets/>\n            </Badge>\n            <Badge color=\"primary\" component={RouterLink} to=\"/messaging\">\n                <Message/>\n            </Badge>\n                <Avatar src={currentUser.purrfile_picture}\n                onClick={e=>setOpen(true)}\n                />\n          </Icons>\n        </StyledToolbar>\n         <Menu\n        id=\"demo-positioned-menu\"\n        aria-labelledby=\"demo-positioned-button\"\n        // anchorEl={anchorEl}\n        open={open}\n        onClose={e=>setOpen(false)}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <MenuItem component={RouterLink} to=\"/me\" onClick={e=>setOpen(false)}> Profile </MenuItem>\n        <MenuItem component={RouterLink} to=\"/myaccount\" onClick={e=>setOpen(false)}>My account</MenuItem>\n        <MenuItem onClick={handleLogOut}>Logout</MenuItem>\n      </Menu>\n    </AppBar>\n    {/* <Box>\n      <Stack direction=\"column\" alignItems=\"center\" justifyContent=\"space-evenly\" spacing={0.5}>\n      </Stack>\n    </Box> */}\n    </div>\n  )\n}","import * as React from 'react';\nimport { useState } from \"react\";\nimport { Checkbox, Card, CardHeader, CardMedia, CardContent, CardActions, Avatar, Typography, Button } from '@mui/material';\nimport { Favorite } from '@mui/icons-material'\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\n\n\n//Material UI\n// const ExpandMore = styled((props) => {\n//   const { expand, ...other } = props;\n//   return <IconButton {...other} />;\n// })(({ theme, expand }) => ({\n//   transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n//   marginLeft: 'auto',\n//   transition: theme.transitions.create('transform', {\n//     duration: theme.transitions.duration.shortest,\n//   }),\n// }));\n\nexport default function PostForNewsFeed({post, currentUser}) {\n    //Material UI\n  // const [expanded, setExpanded] = useState(false);\n  const [likeCount, setLikeCount] = useState(post.like)\n  const [likeToggle, setLikeToggle] = useState(false)\n  // const [commentTxt, setCommentTxt] = useState(\"\");\n  // const [commentThread, setCommentThread] = useState(post.comments)\n\n  // Material UI, Heart on and off\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // };\n\n  //for someone else's post, other users can ONLY update like and comment\n  //currentUser can only like 1 post ONCE??stay highlighted?\n  const handleAddLike = (e) => {\n    console.log(post.id)\n    setLikeToggle(currentLikeToggle => !currentLikeToggle)\n    // fetch UPDATE meow_posts/:id \n    const configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      // body: like: post.like + 1\n      body: JSON.stringify(likeToggle ? {like: likeCount-1} : {like: likeCount+1}),\n    };\n    fetch(`/meow_posts/${post.id}`, configObj)\n    .then((resp) => resp.json())\n    .then((obj) => {\n      setLikeCount(obj.like)\n    });\n  }\n\n  // const handleSubmitComment = (e) => {\n    // find the post's object or key\n    // fetch UPDATE meow_posts/:id \n    // body: comment: \"what is typed in the box\", user_id: currentUser.id\n  // }\n  // console.log(commentTxt)\n\n  return (\n    <>\n    <Card key={post.id} sx={{ width: \"350px\", margin: 3 }}>\n            <CardHeader\n              avatar={\n                <Avatar alt={post.user.id} src={post.user.purrfile_picture} sx={{ width: 56, height: 56 }}/>\n              }\n              title={post.user.username}\n            />\n            <CardMedia\n              component=\"img\"\n              height=\"20%\"\n              image={post.image}\n              alt={post.description}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {post.description}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <Button \n                aria-label=\"add like\"\n                onClick={handleAddLike}\n                name=\"like\"\n                id=\"like\"\n                value={post.like}\n                sx={{ height: \"3vh\" }}\n              >\n              <Checkbox {...label} \n              icon={<FavoriteIcon sx={{ height: \"3vh\" }}/>} \n              checkedIcon={<Favorite sx={{ color: \"red\" }} />} \n              /> {likeCount}\n              </Button>\n              \n              {/* <ExpandMore\n                expand={expanded}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n              >\n                <ExpandMoreIcon />\n              </ExpandMore> */}\n            </CardActions>\n            {/* <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Card>\n                <Box sx={{ p: \"15px\" }}>\n                <Stack direction=\"row\" spacing={2} alignItems=\"flex-start\">\n                <Avatar\n                src={currentUser.purrfile_picture}\n                alt=\"user-avatar\"\n                />\n                <TextField\n                multiline\n                fullWidth\n                margin=\"0\"\n                //    minRows={4}\n                id=\"outlined-multilined\"\n                placeholder=\"Meows\"\n                value={commentTxt}\n                onChange={(e) => {\n                    setCommentTxt(e.target.value);\n                  }}\n                  />\n                <Button\n                onSubmit={handleSubmitComment}\n                size=\"small\"\n                sx={{bgcolor: \"success\",color: \"neutral.white\",p: \"8px 25px\",\"&:hover\": {bgcolor: \"success\"},}}>\n                Send\n                </Button>\n                </Stack>\n                </Box>\n                </Card>\n              </CardContent>\n            </Collapse> */}\n          </Card>\n    </>\n  );\n}","import { useState, useEffect } from \"react\";\nimport { Box, Stack, Link } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PostForNewsFeed from './PostForNewsFeed.js';\n\nexport default function NewsFeed({currentUser}) {\n  const [allPosts, setAllPosts] = useState([])\n  const [errors, setErrors] = useState([]);\n\n  // requesting all meow_posts\n  useEffect(() => {\n    fetch(\"/meow_posts\")\n    .then(res => {\n      if(res.ok){\n          res.json().then(posts => {\n              setAllPosts(posts)\n          })\n      } else {\n          res.json().then(json => setErrors(Object.entries(json.errors)))\n      }\n  })\n  }, []);\n  \n  // for each friend's user_id, map through allPosts and filter out the ones that are matching the friend's user_id\n  function friendsPosts() {\n    let idsArray = []\n    const pluck = (arr, key) => arr.map(i => i[key]);\n    const friendIds = pluck(currentUser.friends, 'id')\n    idsArray = [...friendIds, currentUser.id]\n\n    const postsArray = []\n    for ( let i = 0; i < idsArray.length; i++ ) {\n      const eachPostsArray = allPosts.filter(post => post.user.id === idsArray[i])\n      postsArray.push(eachPostsArray)\n    }\n    return postsArray.flat()\n  }\n\n  return (\n    <>\n      <Box bgcolor=\"white\" flex={4} p={5}>\n        <Stack alignItems=\"center\">\n          {currentUser.friends.length > 0 ? friendsPosts().sort((a, b) => b.id - a.id)\n          ?.map(post => (\n            <PostForNewsFeed key={post.id} post={post} currentUser={currentUser}/>\n          )) \n          : \n          <Box container style={{ display: \"inline-block\" }}>\n            <Link component={RouterLink} to=\"/mycatpanions\">Add some catpanions to view meowposts!</Link>\n          </Box>\n          }\n        </Stack>\n      </Box>\n    </>\n  );\n}\n","import React, { useState } from 'react'\nimport { useNavigate,  Link as RouterLink } from 'react-router-dom'\nimport { Grid } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport EmailIcon from '@mui/icons-material/Email';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nconst defaultValues = {\n  username: \"\",\n  password: \"\",\n};\n\nexport default function Login({ setCurrentUser}) {\n\n  const [formValues, setFormValues] = useState(defaultValues);\n  const [showPassword, setShowPassword] = useState(false)\n  \n  const navigate = useNavigate()\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ ...formValues }),\n    };\n\n    fetch(\"/login\", configObj)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      throw new Error('Incorrect Username or Pawssword. Try Again!');\n    })\n    .then((user) => {\n      // set the state of the user\n      setCurrentUser(user)\n      // route user to their newsfeed\n      navigate(\"/newsfeed\")\n    })\n    .catch((error) => {\n      alert(error)\n    })\n    setFormValues(defaultValues);\n    };\n\n  const handleClickShowPassword = () => {\n    setShowPassword((currentState) => !currentState);\n  };\n  \n  return (\n    <>\n    <Grid style={{ display: \"inline-block\", backgroundImage: \"url(https://i.imgur.com/m8NVI9B.png)\",\n    backgroundSize: \"cover\",\n    backgroundAttachment: \"fixed\",\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\", \n    backgroundRepeat: \"no-repeat\", \n    }}>\n      <Grid style={{ display: \"inline-block\", width: \"100%\", height: \"100%\" }}>\n        <Grid style={{ width: \"350px\", height: \"350px\", margin: \"auto\", marginTop: \"13%\" }}>\n          <form onSubmit={handleSubmit}>\n            <Grid container \n              alignItems=\"center\"\n              direction=\"column\"\n              >\n              <h2 style={{ marginTop: \"5%\" }}>Log in to Whiskker!</h2>\n              <Grid item margin=\"auto\" marginTop=\"5%\" marginBottom=\"2.5%\">\n                <TextField\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EmailIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                id=\"username\"\n                name=\"username\"\n                label=\"Username\"\n                type=\"text\"\n                value={formValues.username}\n                onChange={handleChange}\n                required\n                />\n              </Grid>\n              <Grid item margin=\"auto\" marginBottom=\"2.5%\" >\n                <TextField\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          edge=\"start\">\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  id=\"password-input\"\n                  name=\"password\"\n                  label=\"Password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  value={formValues.password || \"\"}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item margin=\"auto\" marginBottom=\"2%\">\n                <Button type=\"submit\" variant=\"contained\" sx={{backgroundColor:\"#33691e\"}}>\n                  Sign In\n                </Button>\n              </Grid>\n              <h5>New to Whiskker?</h5>\n              <Grid item margin=\"auto\" marginTop=\"1%\">\n                <Button variant=\"contained\" type=\"submit\" sx={{backgroundColor:\"#33691e\"}} component={RouterLink} to=\"/signup\">\n                  Sign Up Instead\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </Grid>\n    </>\n  );\n}\n","import React from 'react'\nimport { AppBar, Toolbar, styled, Typography } from \"@mui/material\"\nimport { Pets } from \"@mui/icons-material\";\n\nexport default function SignupNavbar () {\n  const StyledToolbar = styled(Toolbar) ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  })\n\n  return (\n    <AppBar position=\"fixed\" sx={{backgroundColor:\"#33691e\"}}>\n        <StyledToolbar>\n          <Typography variant=\"h5\" sx={{ display: {xs: \"none\", sm:\"block\" }, ml: 1 }}>\n            <Pets/> Whiskker\n            </Typography>\n        </StyledToolbar>\n    </AppBar>\n  )\n}","import React from 'react'\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport TextField from \"@mui/material/TextField\";\nimport { Grid } from \"@mui/material\"\n\nfunction CatpanionsSearch( { search, setSearch } ) {\n  \n    function handleChange(e){\n        setSearch(e.target.value)\n    }\n  \n    return (\n    <Grid item margin=\"auto\"  marginTop=\"2%\" marginBottom=\"2%\" marginLeft=\"5%\">\n        <form style={{ width: \"auto\" }}>\n            <Grid item alignItems=\"center\">\n                <TextField\n                id=\"search-bar\"\n                value={search}\n                onChange={handleChange}\n                className=\"text\"\n                label=\"Search by full name\"\n                variant=\"outlined\"\n                placeholder=\"Search by full name\"\n                size=\"small\"\n                />\n                <IconButton type=\"submit\" aria-label=\"search\">\n                <SearchIcon style={{ fill: \"blue\" }} />\n                </IconButton>\n            </Grid>\n        </form>\n    </Grid>\n  )\n}\n\nexport default CatpanionsSearch","import React, { useState } from 'react'\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { Grid } from \"@mui/material\"\nimport { Link as RouterLink } from 'react-router-dom'\n\nfunction CatpanionItem( { Item, friend, catpanions, currentUser } ) {\n\n    const [disabled, setDisabled] = useState(false)\n\n    function handleDeleteFriend(){\n        const catpanionToDelete = catpanions?.find(catpanion => {\n            if ((catpanion.user_id === currentUser.id) && (catpanion.friend_id === friend.id)){\n                return catpanion.id\n            } else\n            return undefined\n        })\n        fetch(`/catpanions/${catpanionToDelete.id}`, {method: \"DELETE\"})\n            setDisabled(currentState => !currentState)\n    }\n  \n    return (\n    <Item>\n        <Grid container>\n            <Grid item>\n                <Avatar alt=\"Remy Sharp\" src={friend.purrfile_picture} sx={{ width: \"95px\", height: \"95px\" }}/>\n            </Grid>\n            <Grid item sx={{ flexGrow: 1 }}>\n                <h2>{friend.full_name}</h2>\n                <h4>@{friend.username}</h4>\n            </Grid>\n            <Grid item marginLeft=\"2%\">\n                <Button variant=\"contained\" disabled={disabled} sx={ { borderRadius: 28, mr: 2, backgroundColor: \"#33691e\" } } component={RouterLink} to=\"/messaging\">Message</Button>\n                <Button variant=\"contained\" disabled={disabled}\n                sx={ { borderRadius: 28, backgroundColor: \"#33691e\" } } onClick={handleDeleteFriend}>{disabled ? \"Friend Removed\" : \"Unfriend\"}</Button>\n            </Grid>\n        </Grid>\n    </Item>\n  )\n}\n\nexport default CatpanionItem","import React, { useState } from 'react'\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { Grid } from \"@mui/material\"\nimport { Link as RouterLink } from 'react-router-dom'\n\nfunction CatpanionSearchItem( { user, catpanions, currentUser, Item } ) {\n\n    const [searchDisabled, setSearchDisabled] = useState(false)\n    const [friendDisabled, setFriendDisabled] = useState(false)\n\n    const friendIdsArray = []\n    currentUser.friends?.map(friend => {   \n        return friendIdsArray.push(friend.id)\n    })\n  \n    return (\n        <Item key={user.id}>\n            <Grid container>\n                <Grid item>\n                    <Avatar alt=\"Remy Sharp\" src={user.purrfile_picture} sx={{ width: \"95px\", height: \"95px\" }}/>\n                </Grid>\n                <Grid item sx={{ flexGrow: 1 }}>\n                    <h2>{user.full_name}</h2>\n                    <h4>@{user.username}</h4>\n                </Grid>\n                <Grid item marginLeft=\"2%\">\n                    {friendIdsArray.includes(user.id) ? \n                    <>    \n                        <Button variant=\"contained\" \n                            disabled={searchDisabled} \n                            sx={ { borderRadius: 28, mr: 2, backgroundColor: \"#33691e\" } } \n                            component={RouterLink} \n                            to=\"/messaging\"\n                        >Message</Button>\n                        <Button variant=\"contained\" \n                            disabled={searchDisabled} \n                            sx={ { borderRadius: 28, backgroundColor: \"#33691e\" } } \n                            onClick={\n                                function handleDeleteFriend(){\n                                    const catpanionToDelete = catpanions?.find(catpanion => {\n                                        if ((catpanion.user_id === currentUser.id) && (catpanion.friend_id === user.id)){\n                                            return catpanion.id\n                                        } else\n                                        return undefined\n                                    })\n                                    fetch(`/catpanions/${catpanionToDelete.id}`, {method: \"DELETE\"})\n                                    setSearchDisabled(currentState => !currentState)\n                                }\n                        }>Remove Friend</Button>\n                    </>\n                    :\n                    <>\n                        {friendDisabled ? <Button variant=\"contained\" sx={ { borderRadius: 28, mr: 2 } } component={RouterLink} to=\"/messaging\">Message</Button> : null}\n                        <Button variant=\"contained\" disabled={friendDisabled} sx={ { borderRadius: 28 } } onClick={\n                            function handleAddFriend(){\n                                fetch(`/catpanions`, {\n                                    method: 'POST',\n                                    headers: {\n                                        \"Accept\": \"application/json\",\n                                        \"Content-Type\": \"application/json\"\n                                    },\n                                    body: JSON.stringify({user_id: currentUser.id, friend_id: user.id}),\n                                })\n                                setFriendDisabled(currentState => !currentState)\n                            }\n                        }>{friendDisabled ? \"Added <3\" : \"Add friend\"}</Button>\n                    </>\n                    }\n                </Grid>\n            </Grid>\n        </Item>\n  )\n}\n\nexport default CatpanionSearchItem","import React, { useEffect, useState } from 'react'\nimport Stack from \"@mui/material/Stack\";\nimport { Paper } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\";\nimport CatpanionItem from \"./CatpanionItem.js\"\nimport CatpanionSearchItem from \"./CatpanionSearchItem.js\"\n\nfunction CatpanionsList( { currentUser, search, users } ) {\n\n    // const [loggedInUser, setLoggedInUser] = useState({})\n    // page reload\n    const [catpanions, setCatpanions] = useState([])\n\n    useEffect(() => {\n        fetch(\"/catpanions\")\n          .then(res => res.json())\n          .then(setCatpanions)\n      }, [])\n\n    const Item = styled(Paper)(({ theme }) => ({\n        ...theme.typography.body2,\n        padding: theme.spacing(1),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary\n        }));\n\n    // useEffect(() => {\n    //     fetch(`/users/${currentUser.id}`)\n    //     .then(res => res.json())\n    //     .then(setLoggedInUser)\n    // }, [catpanions])\n\n    function allUsers(){\n        \n        let allUsersArray = []\n        const matchingUsers = users.filter(user => {\n            return user.full_name.toLowerCase().includes(search.toLowerCase())\n        })\n\n        console.log(allUsersArray)\n\n        allUsersArray = matchingUsers\n\n        const renderUsers = allUsersArray?.map(user => {\n            return <CatpanionSearchItem key={user.id} \n            user={user} \n            catpanions={catpanions} \n            currentUser={currentUser} \n            Item={Item} />\n            })\n        return renderUsers\n        }\n\n  return (\n    <>\n        <Stack \n            direction=\"column\"\n            alignItems=\"stretch\"\n            justifyContent=\"center\"\n            spacing={2}\n            width=\"75%\"\n            marginLeft=\"5%\">\n            {search === \"\" ? currentUser.friends?.map(friend => (\n                <CatpanionItem key={friend.id}\n                friend={friend} \n                Item={Item} \n                catpanions={catpanions} \n                currentUser={currentUser}\n                />\n            ))\n            : \n            allUsers()\n            }      \n        </Stack>\n    </>\n  )\n}\n\nexport default CatpanionsList","import { useState, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\"\nimport CatpanionsSearch from \"./CatpanionsSearch.js\"\nimport CatpanionsList from \"./CatpanionsList.js\"\n\n// Need current user to get current users friends\n// Need all users to search for friends to follow\n\n//\n\nfunction Catpanions( { currentUser } ) {\n\n    const [search, setSearch] = useState(\"\");\n    const [users, setUsers] = useState([])\n\n    useEffect(() => {\n        fetch(\"/users\")\n        .then(res => res.json())\n        .then(setUsers)\n    }, [])\n    \n    return (\n        <Grid container style={{ display: \"inline-block\", width: \"80%\", margin: \"auto\", justifyContent: \"space-evenly\" }}>\n            <CatpanionsSearch setSearch={setSearch} search={search} />\n            <CatpanionsList currentUser={currentUser} search={search} users={users} />\n        </Grid>\n    )\n}\n\nexport default Catpanions","import * as React from 'react';\nimport { useState } from \"react\";\nimport { Box, Card, CardMedia, CardContent, CardActions, Typography, IconButton, Button, Modal, TextField, Stack, InputAdornment } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { GiCat } from 'react-icons/gi';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\nexport default function PostForProfile({ currentUser, post, deletePost, updatePost }) {\n  // delete button\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  //edit button\n  const [editPostValues, setEditPostValues] = useState({\n    description: post.description, \n    image: post.image,\n    like: post.like,\n    user_id: currentUser.id,\n  })\n  const [editOpen, setEditOpen] = useState(false);\n  const handleEditOpen = () => setEditOpen(true);\n  const handleEditClose = () => setEditOpen(false);\n\n  const { description, image, created_at } = post\n  \n  //DELETE\n  function handleDeleteClick () {\n    // make a delete fetch request and update the backend as well as the post state\n    fetch(`/meow_posts/${post.id}`, {\n      method: 'DELETE'\n    })\n    deletePost(post.id)\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEditPostValues({\n        ...editPostValues,\n        [name]: value\n    })\n  }\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault()\n    const configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n      body: JSON.stringify({ ...editPostValues}),\n    };\n    fetch(`/meow_posts/${post.id}`, configObj)\n    .then(resp => resp.json())\n    .then(updatedPost => {\n      setEditPostValues(updatedPost)\n      updatePost(updatedPost)\n      setEditOpen(false)\n    })\n  }\n\n\n  return (\n    <Box bgcolor=\"white\" flex={4} p={5}>\n    <Card sx={{ maxWidth: 700, margin: 4 }}>\n      <CardMedia\n        component=\"img\"\n        height=\"20%\"\n        image={image}\n        alt={description}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {description}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {created_at}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n\n        <IconButton aria-label=\"edit\">\n        <EditIcon onClick={handleEditOpen}  /> \n        </IconButton>\n        {/* //Modal for Edit */}\n        <Modal\n          open={editOpen}\n          onClose={handleEditClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n          >\n       <Box sx={style} textAlign='center' borderRadius={2} p={8}>\n            <Typography variant=\"h5\" color=\"black\" textAlign=\"center\">\n            Edit Post\n            </Typography>\n        <form onSubmit={handleEditSubmit}>\n            <TextField\n                sx={{ width: \"100%\" }}\n                name=\"description\"\n                id=\"description\"\n                multiline\n                rows={3}\n                placeholder=\"Add edited description here\"\n                variant=\"standard\"\n                value={editPostValues.description}\n                onChange={handleChange}\n                />\n            <Stack direction=\"row\" mt={2} mb={3} gap={1}>\n                <IconButton color=\"success\" aria-label=\"upload picture\" component=\"label\">\n                <TextField\n                    InputLabelProps={{ shrink: true }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <GiCat/>\n                        </InputAdornment>\n                      ),\n                    }}\n                id=\"image\"\n                name=\"image\"\n                label=\"Edit Image URL\"\n                type=\"text\"\n                value={editPostValues.image}\n                onChange={handleChange}\n                />\n                </IconButton>\n            </Stack>\n            <Stack>\n                <Button color=\"success\" display=\"center\" onClick={handleEditSubmit}>EDIT</Button>\n            </Stack>\n        </form>\n        </Box>\n        </Modal>\n\n        <IconButton onClick={handleOpen} aria-label=\"delete\" >\n        <Button> <DeleteForeverIcon /></Button>\n        </IconButton>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style} textAlign='center' borderRadius={2} p={8}>\n            <Typography id=\"modal-modal-title\" variant=\"h7\" component=\"h2\">\n              Are you sure you want to delete?\n            </Typography>\n            <Button sx={{ margin: 2 }} variant=\"outlined\" onClick={handleDeleteClick}>Yes</Button>\n            <Button sx={{ margin: 2 }} variant=\"outlined\" onClick={handleClose}>No</Button>\n          </Box>\n        </Modal>\n        </CardActions>\n    </Card>\n    </Box>\n  );\n}","import React from 'react';\nimport { useState } from \"react\";\nimport { Fab, Tooltip, Button, Modal, Box, Typography, styled, TextField, Avatar, Stack, InputAdornment } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport { GiCat } from 'react-icons/gi';\n\n\n//Material UI\nconst CustomModal = styled(Modal) ({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n})\n\nconst UserBox = styled(Box) ({\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"10px\",\n    marginBottom: \"20px\"\n})\n\nconst defaultValues = {\n    user_id: undefined,\n    description: \"\",\n    image: \"\",\n    like: 0,\n}\n\nexport default function CreatePost({ currentUser, addPost }) {\n    const [open, setOpen] = useState(false);\n    const [postValues, setPostValues] = useState(defaultValues);\n\n    const { purrfile_picture, full_name } = currentUser\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setPostValues({\n            ...postValues,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const configObj = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify({...postValues, user_id: currentUser.id}),\n          };\n          fetch(\"/meow_posts\", configObj)\n          .then(res => res.json())\n          .then((newPost) => addPost(newPost))\n        setPostValues(defaultValues);\n        setOpen(false)\n    }\n\n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n        <Tooltip onClick={e=>setOpen(true)}title=\"Create Post\" sx={{position:\"fixed\", bottom:20, left: { xs: \"calc(50% - 25px)\", md:30 } }}>\n            <Fab color=\"green\" aria-label=\"add\">\n                <Add/>\n            </Fab>\n        </Tooltip>\n        <Button></Button>\n      <CustomModal\n        open={open}\n        onClose={e=>setOpen(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box width={500} height={280} bgcolor=\"white\" borderRadius={3} p={8}>\n            <Typography variant=\"h5\" color=\"black\" textAlign=\"center\">\n            Create A New Post\n            </Typography>\n        <UserBox>\n            <Avatar alt={full_name} src={purrfile_picture}\n            sx={{ width: 60, height: 60 }}\n            />\n                <Typography fontWeight={900} variant=\"span\">{full_name}\n                </Typography>\n        </UserBox>\n            <Stack direction=\"row\" mt={2} mb={3} gap={1}>\n                <TextField\n                    InputLabelProps={{ shrink: true }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <GiCat/>\n                        </InputAdornment>\n                      ),\n                    }}\n                id=\"image\"\n                name=\"image\"\n                label=\"Add A Photo\"\n                type=\"text\"\n                value={postValues.image}\n                onChange={handleChange}\n                required\n                />\n            </Stack>\n            <TextField\n                sx={{ width: \"100%\" }}\n                name=\"description\"\n                id=\"description\"\n                multiline\n                rows={3}\n                placeholder=\"Add a description\"\n                variant=\"standard\"\n                value={postValues.description}\n                onChange={handleChange}\n                required\n                />\n            <Stack>\n                <Button onClick={handleSubmit}color=\"success\"  display=\"center\">POST</Button>\n            </Stack>\n        </Box>\n      </CustomModal>\n        </form>\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport PostForProfile from \"./PostForProfile\";\nimport CreatePost from \"./CreatePost\"\nimport { Avatar, Typography, Grid, Container} from \"@mui/material\";\n\nexport default function Profile ({ currentUser }) {\n     //keep track of our logged in user's posts during this session\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n      if (currentUser) {\n        setPosts(currentUser.meow_posts)\n      }\n    }, [currentUser]);\n    \n    const { username, purrfile_picture, bio, full_name } = currentUser\n\n    // callback functions for posts CRUD\n    const addPost = (newPost) => setPosts(posts => [...posts, newPost])\n\n    const deletePost = (id) => setPosts(current => current.filter(p => p.id !== id)) \n\n    const updatePost = (updatedPost) => setPosts(current => {\n      return current.map(post => {\n       if(post.id === updatedPost.id){\n         return updatedPost\n       } else {\n         return post\n       }\n      })\n    })\n\n    return (\n        <>\n        <main>\n            <div>\n                <Container maxwidth=\"sm\" style={{ marginTop: \"100px\" }} display=\"center\" alignItems='center' justifyContent='center'>\n                    <Avatar src={purrfile_picture} sx={{ width: 150, height: 150 }} align=\"center\" >\n                    </Avatar>\n                    <Typography variant=\"h5\" style={{ marginTop: \"15px\" }}color=\"text.secondary\" gutterBottom>\n                    Username: {username}\n                    </Typography>\n                    <Typography variant=\"h6\" style={{ marginTop: \"10px\" }} color=\"text.secondary\">\n                    Full Name: {full_name}\n                     </Typography>\n                    <Typography variant=\"h6\" style={{ marginTop: \"10px\" }}color=\"text.secondary\" paragraph>\n                    Bio: {bio}\n                    </Typography> \n            </Container>\n        </div>\n            <Container style={{ marginTop: \"5%\" }}>\n                <Grid container spacing={1}>\n                {posts?.map((post) =>( \n                    <PostForProfile key={post.id} post={post} deletePost={deletePost} currentUser={currentUser} updatePost={updatePost}/>\n                ))}\n                </Grid>\n            </Container>\n    </main>\n    <CreatePost currentUser={currentUser} addPost={addPost} />\n    </>\n    )\n}","import React, { useState } from \"react\"\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Grid, TextField, Button, InputAdornment, IconButton } from \"@mui/material\"\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { IoLogoOctocat } from 'react-icons/io';\nimport { GiCat } from 'react-icons/gi';\n\nconst defaultValues = {\n  full_name: '',\n  purrfile_picture: '',\n  username: '',\n  password: ''\n};\n\nexport default function Signup( { setCurrentUser }) {\n    const [formData, setFormData] = useState(defaultValues)\n    const [errors, setErrors] = useState([]);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const navigate = useNavigate();\n\n    const {username, password, full_name} = formData\n\n    function handleSubmit(e){\n      e.preventDefault()\n      const user = {\n          full_name, \n          username, \n          password, \n      }\n      fetch('/users', {\n        method:'POST',\n        headers:{'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n      })\n      .then(res => {\n          if(res.ok){\n              res.json().then(user => {\n                  // set current user here\n                  setCurrentUser(user)\n                  // need to route user to their newsfeed page/home page\n                  navigate(\"/newsfeed\")\n              })\n          } else {\n              res.json().then(json => setErrors(Object.entries(json.errors)))\n          }\n      })\n      setFormData(defaultValues)\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleClickShowPassword = () => {\n        setShowPassword((currentState) => !currentState);\n    };\n    \n  return (\n    <>\n      <Grid style={{ display: \"inline-block\", backgroundImage: `url(https://i.imgur.com/m8NVI9B.png)`,\n      backgroundSize: \"cover\",\n      backgroundAttachment: \"fixed-right\",\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\", \n      backgroundRepeat: \"no-repeat\",\n      }}>\n      <Grid style={{ display: \"inline-block\", width: \"100%\", height: \"100%\" }}>\n        <Grid style={{ width: \"300px\", height: \"300px\", margin: \"auto\", marginTop: \"13%\" }}>\n          <form onSubmit={handleSubmit}>\n            <Grid container \n            alignItems=\"center\"\n            direction=\"column\"\n            >\n              <h2 style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }}>Sign up for Whiskker!</h2>\n              <Grid item marginTop=\"5%\" marginBottom=\"2%\">\n              <TextField\n                    InputLabelProps={{ shrink: true }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <GiCat/>\n                        </InputAdornment>\n                      ),\n                    }}\n                    id=\"full_name\"\n                    name=\"full_name\"\n                    label=\"Full Name\"\n                    type=\"text\"\n                    value={formData.full_name || \"\"}\n                    onChange={handleChange}\n                    required\n                  />\n              </Grid>\n              <Grid item style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                <TextField\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <IoLogoOctocat />\n                      </InputAdornment>\n                    ),\n                  }}\n                  id=\"username\"\n                  name=\"username\"\n                  label=\"Username\"\n                  type=\"text\"\n                  value={formData.username || \"\"}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n            <Grid item style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }}>\n              <TextField\n                InputLabelProps={{ shrink: true }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        edge=\"start\"\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                id=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={formData.password || \"\"}\n                onChange={handleChange}\n                required\n              />\n            </Grid>\n            <Grid item style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }}>\n              <Button type=\"submit\" variant=\"contained\" sx={{backgroundColor:\"#33691e\"}}>\n                CREATE FREE ACCOUNT\n              </Button>\n            </Grid>\n            <Grid item marginBottom=\"5%\">\n            <h5>Already have an account?</h5>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{backgroundColor:\"#33691e\"}}\n              component={RouterLink}\n              to=\"/\"\n            >\n              Login Instead\n            </Button>\n          </Grid>\n            </Grid>\n            \n          </form>\n        </Grid>\n      </Grid>\n    </Grid>\n  </>\n  )\n} ","import { useState, React } from 'react';\nimport { Grid, Typography, Paper, List, ListItem, Avatar, Divider, ListItemText, ListItemIcon, TextField, Fab, Button } from \"@mui/material\";\n// import { LocalConvenienceStoreOutlined } from '@mui/icons-material';\n\nexport default function MeowMail ({currentUser}) {\n    const [commentTxt, setCommentTxt] = useState(\"\");\n    console.log(currentUser)\n\n    const { full_name, purrfile_picture, friends, sent_messages, received_messages } = currentUser\n\n    // take current user and render catpanions list on left\n\n    const handleMessageClick = (e) => {\n        // find all messages between currentUser and friend.id\n        console.log(\"clicked\")\n        //sort through all currentUser's sent and received messages \n        //display all filtered meow_mail sorted by meow_mail's id\n    }\n\n    // take each meow_mail and look for meow_mails with sender_id or recipient_id as currentUser.id || selected friend's id\n    return (\n        <div>\n            <Grid container marginTop={10} marginBottom={5} align=\"center\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className=\"header-message\"> MeowMessages</Typography>\n                </Grid>\n            </Grid>\n            <Grid container component={Paper} sx={{ width: \"100%\", height: \"80vh\" }}>\n                <Grid item xs={3} sx={{ borderRight: \"1px solid #e0e0e0\"}}>\n                    <List>\n                        <ListItem button key={full_name}>\n                            <ListItemIcon>\n                                <Avatar alt={full_name} src={purrfile_picture}/>\n                            </ListItemIcon>\n                            <ListItemText primary={full_name}></ListItemText>\n                        </ListItem>\n                    </List>\n                    <Divider />\n                    {/* <Grid item xs={12} style={{ padding: \"10px\" }}>\n                        <TextField id=\"outlined-basic-email\" label=\"Search\" variant=\"outlined\" fullWidth/>\n                    </Grid> */}\n                    <Divider />\n                    <List>\n                        {friends.map(friend => (\n                            <Button onClick={handleMessageClick}>\n                                <ListItem key={friend.id} >\n                                    <ListItemIcon>\n                                        <Avatar alt={friend.full_name} src={friend.purrfile_picture}  />\n                                    </ListItemIcon>\n                                    <ListItemText primary={friend.full_name}></ListItemText>\n                                </ListItem>\n                            </Button>\n                        ))}\n                    </List>\n                </Grid>\n            <Grid item xs={9}>\n                <List xs={{ height: \"70vh\", overflowY: \"auto\" }}>\n                    <ListItem key=\"1\">\n                            <Grid item xs={12}>\n                        <Avatar alt=\"Connie\" src=\"https://images.theconversation.com/files/443350/original/file-20220131-15-1ndq1m6.jpg?ixlib=rb-1.1.0&rect=0%2C0%2C3354%2C2464&q=45&auto=format&w=926&fit=clip\"/>\n                        <Grid container>\n                                <ListItemText align=\"right\" primary=\"Hello! how are you?\">\n                                </ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"insert time\">\n                                </ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"2\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"I'm doing awesome!\">\n                                </ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"insert time\">\n                                </ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"3\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"That's cool.\">\n                                </ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"insert time\">\n                                </ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                </List>\n                <Divider />\n                <Grid container style= {{ padding: \"20px\" }}>\n                    <Grid item xs={11}>\n                        <TextField id=\"oulined-basic-email\"label=\"Type Something\" fullWidth\n                        value={commentTxt}\n                        onChange={(e) => { setCommentTxt(e.target.value); }} />\n                    </Grid>\n                    <Grid xs={1} align=\"right\">\n                    <Fab \n                    color=\"success\" \n                    aria-label=\"add\">\n                        Send\n                    </Fab>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    </div>  \n    )\n}","import React, { useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, TextField, Button, InputAdornment } from \"@mui/material\"\nimport { IoLogoOctocat } from 'react-icons/io';\nimport { GiCat } from 'react-icons/gi';\n\nfunction MyAccount({currentUser, setCurrentUser}) {\n    const [updateUser, setUpdateUser] = useState({\n      bio: currentUser.bio,\n      friends: [currentUser.friends],\n      full_name: currentUser.full_name,\n      meow_posts: [currentUser.meow_posts],\n      purrfile_picture: currentUser.purrfile_picture,\n      username: currentUser.username\n    });\n\n    const navigate = useNavigate()\n  \n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setUpdateUser({\n        ...updateUser,\n        [name]: value,\n      });\n    };\n    // console.log(formValues)\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const configObj = {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n          },\n          body: JSON.stringify({...updateUser})\n        };\n        fetch(`/users/${currentUser.id}`, configObj)\n          .then((res) => res.json())\n          .then((data) => {\n            setCurrentUser(data)\n            navigate('/me')\n          } \n        )\n        setUpdateUser(updateUser);\n      };\n    \n    return (\n        <div>\n        <Grid style={{ display: \"inline-block\", backgroundImage: `url(https://i.imgur.com/m8NVI9B.png)`,\n    backgroundSize: \"cover\",\n    backgroundAttachment: \"fixed-right\",\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\", \n    backgroundRepeat: \"no-repeat\",\n    }}>\n      <Grid style={{ display: \"inline-block\", width: \"100%\", height: \"100%\" }}>\n        <Grid style={{ width: \"300px\", height: \"300px\", margin: \"auto\", marginTop: \"13%\"}}>\n          <form onSubmit={handleSubmit}>\n            <Grid container \n            alignItems=\"center\"\n            justify=\"center\"\n            direction=\"column\"\n            margin=\"auto\">\n              <h3 style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }}>Edit My Whiskkers Account</h3>\n              <Grid item margin=\"auto\" marginTop=\"5%\" marginBottom=\"2%\">\n              <TextField\n                    InputLabelProps={{ shrink: true }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <GiCat/>\n                        </InputAdornment>\n                      ),\n                    }}\n                    id=\"full_name\"\n                    name=\"full_name\"\n                    label=\"Full Name\"\n                    type=\"text\"\n                    value={updateUser.full_name}\n                    onChange={handleChange}\n                    \n                  />\n              </Grid>\n              <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                <TextField\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <IoLogoOctocat />\n                      </InputAdornment>\n                    ),\n                  }}\n                  id=\"username\"\n                  name=\"username\"\n                  label=\"Username\"\n                  type=\"text\"\n                  value={updateUser.username}\n                  onChange={handleChange}\n                  \n                />\n              </Grid>\n              <Grid item margin=\"auto\" marginBottom=\"2%\">\n              <TextField\n                InputLabelProps={{ shrink: true }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      {/* <InsertPhotoIcon /> */}\n                      <GiCat/>\n                    </InputAdornment>\n                  ),\n                }}\n                id=\"purrfile_picture\"\n                name=\"purrfile_picture\"\n                label=\"Purrfile Picture\"\n                type=\"text\"\n                value={updateUser.purrfile_picture}\n                onChange={handleChange}\n                \n              />\n            </Grid>\n             <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }} >\n                <TextField\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <IoLogoOctocat />\n                      </InputAdornment>\n                    ),\n                  }}\n                  id=\"bio\"\n                  name=\"bio\"\n                  label=\"Bio\"\n                  type=\"text\"\n                  value={updateUser.bio}\n                  onChange={handleChange}\n                  \n                />\n              </Grid>\n            <Grid item margin=\"auto\" style={{ marginTop: \"2.5%\", marginBottom: \"2.5%\" }}>\n              <Button type=\"submit\" variant=\"contained\" sx={{backgroundColor:\"#33691e\"}}\n                onSubmit={handleSubmit}>\n                EDIT\n              </Button>\n            </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </Grid>\n          \n        </div>\n  )\n}\n\nexport default MyAccount","import { useState, useEffect } from 'react'\nimport { Routes, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar.js\";\nimport NewsFeed from './NewsFeed.js';\nimport Login from \"./Login.js\";\nimport SignupNavBar from \"./SignupNavBar.js\"\nimport Catpanions from './Catpanions.js';\nimport Profile from \"./Profile.js\";\nimport Signup from \"./Signup.js\";\nimport MeowMail from \"./MeowMail.js\";\nimport MyAccount from \"./MyAccount.js\"\n\nfunction App() {\n  //set our logged in user with login or signup\n  const [currentUser, setCurrentUser] = useState(false) \n  //keep track of our logged in user's catpanions during current session\n\n  // fetch the logged in user when app loads if there is a user\n  useEffect(() => {\n    fetch(\"/me\")\n    .then(res => res.json())\n    .then((user) => {\n      setCurrentUser(user)\n    })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {currentUser ? <NavBar setCurrentUser={setCurrentUser} currentUser={currentUser}/> : <SignupNavBar />}\n      <Routes>\n        <Route path={currentUser ? \"/newsfeed\" : \"/\"} element={currentUser ? <NewsFeed currentUser={currentUser}/> : <Login setCurrentUser={setCurrentUser}/>} />\n        <Route path=\"signup\" element={<Signup setCurrentUser={setCurrentUser}/>} />\n        <Route path=\"mycatpanions\" element={<Catpanions currentUser={currentUser} />} />\n        <Route path=\"me\" element={<Profile currentUser={currentUser}/>}/>\n        <Route path=\"messaging\" element={<MeowMail currentUser={currentUser}/>}/>\n        <Route path=\"myaccount\" element={<MyAccount currentUser={currentUser} setCurrentUser={setCurrentUser}/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\")\n);\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);"],"sourceRoot":""}